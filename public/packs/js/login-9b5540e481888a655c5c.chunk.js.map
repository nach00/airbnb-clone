{"version":3,"sources":["webpack:///./app/javascript/src/login/loginWidget.jsx","webpack:///./app/javascript/src/login/signupWidget.jsx","webpack:///./app/javascript/src/login/login.jsx","webpack:///./app/javascript/src/utils/fetchHelper.js","webpack:///./app/javascript/src/layout.jsx"],"names":["LoginWidget","props","handleInputChange","event","target","name","value","setState","handleSubmit","preventDefault","loading","error","state","email","password","fetch","safeCredentials","method","body","JSON","stringify","user","then","handleErrors","response","json","data","onLoginSuccess","console","this","onSubmit","className","role","htmlFor","type","id","onChange","required","disabled","onClick","onToggleForm","React","Component","SignupWidget","validateForm","username","confirmPassword","length","test","validationError","loginUser","Error","onSignupSuccess","minLength","maxLength","Login","checkAuthentication","isAuthenticated","authenticated","handleRedirect","redirectUrl","URLSearchParams","window","location","search","get","href","handleLoginSuccess","userData","handleSignupSuccess","toggleForm","prevState","showLogin","handleLogout","document","addEventListener","ReactDOM","render","appendChild","createElement","ok","statusText","object","token","querySelector","getAttribute","Object","assign","headers","credentials","Layout","children","Fragment"],"mappings":"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","file":"js/login-9b5540e481888a655c5c.chunk.js","sourcesContent":["import React from 'react';\nimport { handleErrors, safeCredentials } from '@utils/fetchHelper';\n\nclass LoginWidget extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      loading: false,\n      error: null,\n    };\n  }\n\n  handleInputChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.setState({ loading: true, error: null });\n\n    const { email, password } = this.state;\n\n    // Basic validation\n    if (!email || !password) {\n      this.setState({\n        loading: false,\n        error: 'Please fill in all fields'\n      });\n      return;\n    }\n\n    fetch('/api/sessions', safeCredentials({\n      method: 'POST',\n      body: JSON.stringify({\n        user: {\n          email: email,\n          password: password\n        }\n      })\n    }))\n      .then(handleErrors)\n      .then(response => response.json())\n      .then(data => {\n        this.setState({ loading: false });\n        if (data.user) {\n          this.props.onLoginSuccess(data.user);\n        } else {\n          this.setState({ error: 'Login failed. Please try again.' });\n        }\n      })\n      .catch(error => {\n        console.error('Login error:', error);\n        this.setState({\n          loading: false,\n          error: 'Invalid email or password. Please try again.'\n        });\n      });\n  };\n\n  render() {\n    const { email, password, loading, error } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        {error && (\n          <div className=\"alert alert-danger\" role=\"alert\">\n            {error}\n          </div>\n        )}\n\n        <div className=\"mb-3\">\n          <label htmlFor=\"email\" className=\"form-label\">\n            Email address\n          </label>\n          <input\n            type=\"email\"\n            className=\"form-control\"\n            id=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={this.handleInputChange}\n            required\n            disabled={loading}\n          />\n        </div>\n\n        <div className=\"mb-3\">\n          <label htmlFor=\"password\" className=\"form-label\">\n            Password\n          </label>\n          <input\n            type=\"password\"\n            className=\"form-control\"\n            id=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={this.handleInputChange}\n            required\n            disabled={loading}\n          />\n        </div>\n\n        <div className=\"d-grid mb-3\">\n          <button \n            type=\"submit\" \n            className=\"btn btn-primary\"\n            disabled={loading}\n          >\n            {loading ? (\n              <>\n                <span className=\"spinner-border spinner-border-sm me-2\" role=\"status\">\n                  <span className=\"visually-hidden\">Loading...</span>\n                </span>\n                Signing in...\n              </>\n            ) : (\n              'Sign in'\n            )}\n          </button>\n        </div>\n\n        <div className=\"text-center\">\n          <p className=\"mb-0\">\n            Don't have an account?{' '}\n            <button\n              type=\"button\"\n              className=\"btn btn-link p-0\"\n              onClick={this.props.onToggleForm}\n              disabled={loading}\n            >\n              Sign up here\n            </button>\n          </p>\n        </div>\n\n        {/* Demo credentials */}\n        <div className=\"mt-4 p-3 bg-light rounded\">\n          <small className=\"text-muted\">\n            <strong>Demo Credentials:</strong><br />\n            Email: john@example.com<br />\n            Password: password123\n          </small>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default LoginWidget;","import React from 'react';\nimport { handleErrors, safeCredentials } from '@utils/fetchHelper';\n\nclass SignupWidget extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      loading: false,\n      error: null,\n    };\n  }\n\n  handleInputChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  validateForm = () => {\n    const { username, email, password, confirmPassword } = this.state;\n\n    if (!username || !email || !password || !confirmPassword) {\n      return 'Please fill in all fields';\n    }\n\n    if (username.length < 3) {\n      return 'Username must be at least 3 characters long';\n    }\n\n    if (password.length < 8) {\n      return 'Password must be at least 8 characters long';\n    }\n\n    if (password !== confirmPassword) {\n      return 'Passwords do not match';\n    }\n\n    // Basic email validation\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(email)) {\n      return 'Please enter a valid email address';\n    }\n\n    return null;\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.setState({ loading: true, error: null });\n\n    const validationError = this.validateForm();\n    if (validationError) {\n      this.setState({\n        loading: false,\n        error: validationError\n      });\n      return;\n    }\n\n    const { username, email, password } = this.state;\n\n    // First, create the user account\n    fetch('/api/users', safeCredentials({\n      method: 'POST',\n      body: JSON.stringify({\n        user: {\n          username: username,\n          email: email,\n          password: password\n        }\n      })\n    }))\n      .then(handleErrors)\n      .then(response => response.json())\n      .then(data => {\n        if (data.user) {\n          // After successful signup, log the user in\n          return this.loginUser(email, password);\n        } else {\n          throw new Error('Signup failed');\n        }\n      })\n      .catch(error => {\n        console.error('Signup error:', error);\n        this.setState({\n          loading: false,\n          error: 'Signup failed. Email or username may already be taken.'\n        });\n      });\n  };\n\n  loginUser = (email, password) => {\n    return fetch('/api/sessions', safeCredentials({\n      method: 'POST',\n      body: JSON.stringify({\n        user: {\n          email: email,\n          password: password\n        }\n      })\n    }))\n      .then(handleErrors)\n      .then(response => response.json())\n      .then(data => {\n        this.setState({ loading: false });\n        if (data.user) {\n          this.props.onSignupSuccess(data.user);\n        } else {\n          this.setState({ \n            error: 'Account created but login failed. Please try logging in manually.' \n          });\n        }\n      })\n      .catch(error => {\n        console.error('Auto-login error:', error);\n        this.setState({\n          loading: false,\n          error: 'Account created successfully! Please log in manually.'\n        });\n      });\n  };\n\n  render() {\n    const { username, email, password, confirmPassword, loading, error } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        {error && (\n          <div className=\"alert alert-danger\" role=\"alert\">\n            {error}\n          </div>\n        )}\n\n        <div className=\"mb-3\">\n          <label htmlFor=\"username\" className=\"form-label\">\n            Username\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"username\"\n            name=\"username\"\n            value={username}\n            onChange={this.handleInputChange}\n            required\n            disabled={loading}\n            minLength=\"3\"\n            maxLength=\"64\"\n          />\n          <div className=\"form-text\">\n            Choose a unique username (3-64 characters)\n          </div>\n        </div>\n\n        <div className=\"mb-3\">\n          <label htmlFor=\"signup-email\" className=\"form-label\">\n            Email address\n          </label>\n          <input\n            type=\"email\"\n            className=\"form-control\"\n            id=\"signup-email\"\n            name=\"email\"\n            value={email}\n            onChange={this.handleInputChange}\n            required\n            disabled={loading}\n          />\n        </div>\n\n        <div className=\"mb-3\">\n          <label htmlFor=\"signup-password\" className=\"form-label\">\n            Password\n          </label>\n          <input\n            type=\"password\"\n            className=\"form-control\"\n            id=\"signup-password\"\n            name=\"password\"\n            value={password}\n            onChange={this.handleInputChange}\n            required\n            disabled={loading}\n            minLength=\"8\"\n          />\n          <div className=\"form-text\">\n            Password must be at least 8 characters long\n          </div>\n        </div>\n\n        <div className=\"mb-3\">\n          <label htmlFor=\"confirmPassword\" className=\"form-label\">\n            Confirm Password\n          </label>\n          <input\n            type=\"password\"\n            className=\"form-control\"\n            id=\"confirmPassword\"\n            name=\"confirmPassword\"\n            value={confirmPassword}\n            onChange={this.handleInputChange}\n            required\n            disabled={loading}\n          />\n        </div>\n\n        <div className=\"d-grid mb-3\">\n          <button \n            type=\"submit\" \n            className=\"btn btn-primary\"\n            disabled={loading}\n          >\n            {loading ? (\n              <>\n                <span className=\"spinner-border spinner-border-sm me-2\" role=\"status\">\n                  <span className=\"visually-hidden\">Loading...</span>\n                </span>\n                Creating account...\n              </>\n            ) : (\n              'Create account'\n            )}\n          </button>\n        </div>\n\n        <div className=\"text-center\">\n          <p className=\"mb-0\">\n            Already have an account?{' '}\n            <button\n              type=\"button\"\n              className=\"btn btn-link p-0\"\n              onClick={this.props.onToggleForm}\n              disabled={loading}\n            >\n              Sign in here\n            </button>\n          </p>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default SignupWidget;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Layout from '../layout';\nimport LoginWidget from './loginWidget';\nimport SignupWidget from './signupWidget';\nimport { handleErrors, safeCredentials } from '@utils/fetchHelper';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showLogin: true,\n      isAuthenticated: false,\n      loading: true,\n      user: null,\n    };\n  }\n\n  componentDidMount() {\n    this.checkAuthentication();\n  }\n\n  checkAuthentication = () => {\n    fetch('/api/authenticated', safeCredentials({\n      method: 'GET',\n    }))\n      .then(handleErrors)\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          isAuthenticated: data.authenticated,\n          user: data.user || null,\n          loading: false,\n        });\n\n        // If already authenticated, redirect\n        if (data.authenticated) {\n          this.handleRedirect();\n        }\n      })\n      .catch(error => {\n        console.error('Error checking authentication:', error);\n        this.setState({ loading: false });\n      });\n  };\n\n  handleRedirect = () => {\n    const params = new URLSearchParams(window.location.search);\n    const redirectUrl = params.get('redirect_url') || '/';\n    window.location.href = redirectUrl;\n  };\n\n  handleLoginSuccess = (userData) => {\n    this.setState({\n      isAuthenticated: true,\n      user: userData,\n    });\n    this.handleRedirect();\n  };\n\n  handleSignupSuccess = (userData) => {\n    this.setState({\n      isAuthenticated: true,\n      user: userData,\n    });\n    this.handleRedirect();\n  };\n\n  toggleForm = () => {\n    this.setState(prevState => ({\n      showLogin: !prevState.showLogin\n    }));\n  };\n\n  render() {\n    const { showLogin, isAuthenticated, loading, user } = this.state;\n\n    if (loading) {\n      return (\n        <Layout>\n          <div className=\"text-center py-5\">\n            <div className=\"spinner-border text-primary\" role=\"status\">\n              <span className=\"visually-hidden\">Loading...</span>\n            </div>\n            <p className=\"mt-2 text-muted\">Loading...</p>\n          </div>\n        </Layout>\n      );\n    }\n\n    if (isAuthenticated && user) {\n      return (\n        <Layout>\n          <div className=\"row justify-content-center\">\n            <div className=\"col-md-6\">\n              <div className=\"text-center py-5\">\n                <h2 className=\"mb-3\">Welcome back, {user.username}!</h2>\n                <p className=\"text-muted mb-4\">You are already logged in.</p>\n                <div className=\"d-grid gap-2\">\n                  <a href=\"/\" className=\"btn btn-primary\">\n                    Browse Properties\n                  </a>\n                  <button \n                    className=\"btn btn-outline-secondary\"\n                    onClick={this.handleLogout}\n                  >\n                    Logout\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Layout>\n      );\n    }\n\n    return (\n      <Layout>\n        <div className=\"row justify-content-center\">\n          <div className=\"col-md-6 col-lg-5\">\n            <div className=\"card shadow\">\n              <div className=\"card-body p-4\">\n                <div className=\"text-center mb-4\">\n                  <h2 className=\"card-title\">\n                    {showLogin ? 'Welcome back' : 'Join Airbnb Clone'}\n                  </h2>\n                  <p className=\"text-muted\">\n                    {showLogin \n                      ? 'Sign in to your account to continue' \n                      : 'Create your account to get started'\n                    }\n                  </p>\n                </div>\n\n                {showLogin ? (\n                  <LoginWidget \n                    onLoginSuccess={this.handleLoginSuccess}\n                    onToggleForm={this.toggleForm}\n                  />\n                ) : (\n                  <SignupWidget \n                    onSignupSuccess={this.handleSignupSuccess}\n                    onToggleForm={this.toggleForm}\n                  />\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n\n  handleLogout = () => {\n    fetch('/api/sessions', safeCredentials({\n      method: 'DELETE',\n    }))\n      .then(handleErrors)\n      .then(() => {\n        this.setState({\n          isAuthenticated: false,\n          user: null,\n        });\n        window.location.href = '/';\n      })\n      .catch(error => {\n        console.error('Error logging out:', error);\n      });\n  };\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  ReactDOM.render(\n    <Login />,\n    document.body.appendChild(document.createElement('div'))\n  );\n});","const handleErrors = (response) => {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n  return response;\n};\n\nconst safeCredentials = (object) => {\n  const token = document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content');\n  return Object.assign(object, {\n    headers: Object.assign(object.headers || {}, {\n      'X-CSRF-Token': token,\n      'Content-Type': 'application/json',\n    }),\n    credentials: 'same-origin',\n  });\n};\n\nexport { handleErrors, safeCredentials };","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Layout = ({ children }) => {\n  return (\n    <React.Fragment>\n      {/* Navigation Bar */}\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light border-bottom\">\n        <div className=\"container\">\n          <a className=\"navbar-brand fw-bold text-primary\" href=\"/\">\n            Airbnb Clone\n          </a>\n          <button \n            className=\"navbar-toggler\" \n            type=\"button\" \n            data-bs-toggle=\"collapse\" \n            data-bs-target=\"#navbarNav\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul className=\"navbar-nav ms-auto\">\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"/\">Home</a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"/login\">Login</a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n\n      {/* Main Content */}\n      <main className=\"container mt-4 mb-5\">\n        {children}\n      </main>\n\n      {/* Footer */}\n      <footer className=\"bg-light border-top mt-auto py-4\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <h6 className=\"fw-bold\">Airbnb Clone</h6>\n              <p className=\"text-muted small mb-0\">\n                Your home away from home\n              </p>\n            </div>\n            <div className=\"col-md-6 text-md-end\">\n              <p className=\"text-muted small mb-0\">\n                © 2024 Airbnb Clone. Built with Rails & React.\n              </p>\n            </div>\n          </div>\n        </div>\n      </footer>\n    </React.Fragment>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;"],"sourceRoot":""}